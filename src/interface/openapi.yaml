openapi: 3.0.0
info:
  version: "1.0"
  title: Interface for interaction between Mojaloop's Account Lookup Service(ALS) and
    an Oracle Registry Service
  description: Based on Mojaloop [API
    Definition](https://github.com/mojaloop/mojaloop-specification/blob/master/API%20Definition%20v1.0.pdf)
    updated on 2018-03-13 Version 1.0. More information can be found are
    [mojaloop.io](http://mojaloop.io/)
  contact: {}
paths:
  /health:
    get:
      tags:
        - health
      responses:
        '200':
          $ref: '#/components/responses/ResponseHealth200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
      operationId: HealthGet
      summary: Get Server
      description: >-
        The HTTP request GET /health is used to return the current status of the
        API.
  /participants/{Type}/{ID}:
    parameters:
      #Path
      - $ref: "#/components/parameters/Type"
      - $ref: "#/components/parameters/ID"
      #Headers
      - $ref: "#/components/parameters/Content-Type"
      - $ref: "#/components/parameters/Date"
      - $ref: "#/components/parameters/X-Forwarded-For"
      - $ref: "#/components/parameters/FSPIOP-Source"
      - $ref: "#/components/parameters/FSPIOP-Destination"
      - $ref: "#/components/parameters/FSPIOP-Encryption"
      - $ref: "#/components/parameters/FSPIOP-Signature"
      - $ref: "#/components/parameters/FSPIOP-URI"
      - $ref: "#/components/parameters/FSPIOP-HTTP-Method"
    post:
      description: The HTTP request `POST /participants/{Type}/{ID}` (or `POST /participants/{Type}/{ID}/{SubId}`) is used to create information in the server regarding the provided identity, defined by `{Type}`, `{ID}`, and optionally `{SubId}` (for example, `POST /participants/MSISDN/123456789` or `POST /participants/BUSINESS/shoecompany/employee1`). An ExtensionList element has been added to this reqeust in version v1.1
      summary: Create participant information
      tags:
        - participants
      operationId: ParticipantsByTypeAndIDPost
      parameters:
        #Headers
        - $ref: "#/components/parameters/Accept"
        - $ref: "#/components/parameters/Content-Length"
      requestBody:
        description: Participant information to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParticipantsTypeIDSubIDPostRequest"
      responses:
        202:
          $ref: "#/components/responses/202"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"
        501:
          $ref: "#/components/responses/501"
        503:
          $ref: "#/components/responses/503"
    get:
      description: The HTTP request `GET /participants/{Type}/{ID}` (or `GET /participants/{Type}/{ID}/{SubId}`) is used to find out in which FSP the requested Party, defined by `{Type}`, `{ID}` and optionally `{SubId}`, is located (for example, `GET /participants/MSISDN/123456789`, or `GET /participants/BUSINESS/shoecompany/employee1`). This HTTP request should support a query string for filtering of currency. To use filtering of currency, the HTTP request `GET /participants/{Type}/{ID}?currency=XYZ` should be used, where `XYZ` is the requested currency.
      summary: Look up participant information
      tags:
        - participants
      operationId: ParticipantsByTypeAndIDGet
      parameters:
        #Headers
        - $ref: "#/components/parameters/Accept"
      responses:
        202:
          $ref: "#/components/responses/202"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"
        501:
          $ref: "#/components/responses/501"
        503:
          $ref: "#/components/responses/503"
    put:
      description: The callback `PUT /participants/{Type}/{ID}` (or `PUT /participants/{Type}/{ID}/{SubId}`) is used to inform the client of a successful result of the lookup, creation, or deletion of the FSP information related to the Party. If the FSP information is deleted, the fspId element should be empty; otherwise the element should include the FSP information for the Party.
      summary: Return participant information
      tags:
        - participants
      operationId: ParticipantsByTypeAndIDPut
      parameters:
        #Headers
        - $ref: "#/components/parameters/Content-Length"
      requestBody:
        description: Participant information returned.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParticipantsTypeIDPutResponse"
      responses:
        200:
          $ref: "#/components/responses/200"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"
        501:
          $ref: "#/components/responses/501"
        503:
          $ref: "#/components/responses/503"
    delete:
      description:
        The HTTP request `DELETE /participants/{Type}/{ID}` (or `DELETE /participants/{Type}/{ID}/{SubId}`) is used to delete information in the server regarding the provided identity, defined by `{Type}` and `{ID}`) (for example, `DELETE /participants/MSISDN/123456789`), and optionally `{SubId}`. This HTTP request should support a query string to delete FSP information regarding a specific currency only. To delete a specific currency only, the HTTP request `DELETE /participants/{Type}/{ID}?currency=XYZ` should be used, where `XYZ` is the requested currency.


        **Note:** The Account Lookup System should verify that it is the Partyâ€™s current FSP that is deleting the FSP information.
      summary: Delete participant information
      tags:
        - participants
      operationId: ParticipantsByTypeAndIDDelete
      parameters:
        #Headers
        - $ref: "#/components/parameters/Accept"
      responses:
        202:
          $ref: "#/components/responses/202"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"
        501:
          $ref: "#/components/responses/501"
        503:
          $ref: "#/components/responses/503"
  /participants:
    post:
      description: The HTTP request `POST /participants` is used to create information in the server regarding the provided list of identities. This request should be used for bulk creation of FSP information for more than one Party. The optional currency parameter should indicate that each provided Party supports the currency.
      summary: Create bulk participant information
      tags:
        - participants
      operationId: ParticipantsPost
      parameters:
        #Headers
        - $ref: "#/components/parameters/Accept"
        - $ref: "#/components/parameters/Content-Length"
        - $ref: "#/components/parameters/Content-Type"
        - $ref: "#/components/parameters/Date"
        - $ref: "#/components/parameters/X-Forwarded-For"
        - $ref: "#/components/parameters/FSPIOP-Source"
        - $ref: "#/components/parameters/FSPIOP-Destination"
        - $ref: "#/components/parameters/FSPIOP-Encryption"
        - $ref: "#/components/parameters/FSPIOP-Signature"
        - $ref: "#/components/parameters/FSPIOP-URI"
        - $ref: "#/components/parameters/FSPIOP-HTTP-Method"
      requestBody:
        description: Participant information to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParticipantsPostRequest"
      responses:
        202:
          $ref: "#/components/responses/202"
        400:
          $ref: "#/components/responses/400"
        401:
          $ref: "#/components/responses/401"
        403:
          $ref: "#/components/responses/403"
        404:
          $ref: "#/components/responses/404"
        405:
          $ref: "#/components/responses/405"
        406:
          $ref: "#/components/responses/406"
        501:
          $ref: "#/components/responses/501"
        503:
          $ref: "#/components/responses/503"
tags:
  - name: participants
    description: ""
servers:
  - url: /
components:
  schemas:
    Currency:
      title: Currency
      description: 'The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.'
      type: string
      minLength: 3
      maxLength: 3
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMW
        - ZWD
    PartyIdTypeEnum:
      title: PartyIdTypeEnum
      description: 'Below are the allowed values for the enumeration - MSISDN An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the ITU-T E.164 standard. Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix. - EMAIL An email is used as reference to a participant. The format of the email should be according to the informational RFC 3696. - PERSONAL_ID A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element. - BUSINESS A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used. - DEVICE A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element. - ACCOUNT_ID A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP. - IBAN A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace. - ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier.'
      example: MSISDN
      type: string
      enum:
        - MSISDN
        - EMAIL
        - PERSONAL_ID
        - BUSINESS
        - DEVICE
        - ACCOUNT_ID
        - IBAN
        - ALIAS
    ErrorInformation:
      title: ErrorInformation
      description: Data model for the complex type ErrorInformation.
      type: object
      properties:
        errorCode:
          description: Specific error number.
          type: string
        errorDescription:
          description: Error description string.
          type: string
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      required:
        - errorCode
        - errorDescription
    ErrorInformationResponse:
      title: ErrorInformationResponse
      description: Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.
      type: object
      properties:
        errorInformation:
          $ref: '#/components/schemas/ErrorInformation'
    Extension:
      title: Extension
      description: Data model for the complex type Extension
      type: object
      properties:
        key:
          description: Extension key.
          type: string
        value:
          description: Extension value.
          type: string
      required:
        - key
        - value
    ExtensionList:
      title: ExtensionList
      description: Data model for the complex type ExtensionList
      type: object
      properties:
        extension:
          description: Number of Extension elements
          type: array
          items:
            $ref: '#/components/schemas/Extension'
          minItems: 1
          maxItems: 16
      required:
        - extension
    ParticipantsTypeIDGetResponse:
      title: ParticipantsTypeIDGetResponse
      description: OK
      type: object
      properties:
        partyList:
          description: List of PartyTypeIdInfo elements that were either created or failed to be created.
          type: array
          items:
            $ref: '#/components/schemas/PartyTypeIdInfo'
          minItems: 1
          maxItems: 10000
    ParticipantsTypeIDPutRequest:
      title: ParticipantsTypeIDPutRequest
      description: 'PUT /participants/{Type}/{ID} object'
      type: object
      properties:
        fspId:
          description: FSP Identifier that the Party belongs to.
          type: string
        currency:
          description: Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.
          type: string
        partySubIdOrType:
          description: A sub-identifier or sub-type for the Party.
          type: string
      required:
        - fspId
        - currency
    ParticipantsPostRequest:
      title: ParticipantsPostRequest
      description: POST /participants object
      type: object
      properties:
        requestId:
          description: 'The ID of the request, decided by the client. Used for identification of the callback from the server.'
          type: string
        partyList:
          description: List of PartyIdInfo elements that the client would like to update or create FSP information about.
          type: array
          items:
            $ref: '#/components/schemas/PartyIdInfo'
          minItems: 1
          maxItems: 10000
      required:
        - requestId
        - partyList
    PartyIdInfo:
      title: PartyIdInfo
      description: Data model for the complex type PartyIdInfo.
      type: object
      properties:
        partyIdType:
          description: Type of the identifier.
          type: string
        partyIdentifier:
          description: An identifier for the Party.
          type: string
        partySubIdOrType:
          description: A sub-identifier or sub-type for the Party.
          type: string
        fspId:
          description: FSP ID
          type: string
        currency:
          description: Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.
          type: string
      required:
        - partyIdType
        - partyIdentifier
    PartyTypeIdInfo:
      title: PartyTypeIdInfo
      description: Data model for the complex type PartyIdInfo.
      type: object
      properties:
        fspId:
          description: FSP ID
          type: string
        currency:
          description: Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.
          type: string
        partySubIdOrType:
          description: A sub-identifier or sub-type for the Party.
          type: string
      required:
        - fspId
        - currency
    ParticipantsTypeIDSubIDPostRequest:
      title: ParticipantsTypeIDSubIDPostRequest
      type: object
      description: 'The object sent in the POST /participants/{Type}/{ID}/{SubId} and /participants/{Type}/{ID} requests. An additional optional ExtensionList element has been added as part of v1.1 changes.'
      properties:
        fspId:
          $ref: '#/components/schemas/FspId'
        currency:
          $ref: '#/components/schemas/Currency'
        extensionList:
          $ref: '#/components/schemas/ExtensionList'
      required:
        - fspId
    FspId:
      title: FspId
      type: string
      minLength: 1
      maxLength: 32
      description: FSP identifier.
    ParticipantsTypeIDPutResponse:
      title: ParticipantsTypeIDPutResponse
      type: object
      description: 'The object sent in the PUT /participants/{Type}/{ID}/{SubId} and /participants/{Type}/{ID} callbacks.'
      properties:
        fspId:
          $ref: '#/components/schemas/FspId'
    Status:
      title: Status
      description: Data model for the api status.
      type: object
      additionalProperties: false
      properties:
        status:
          description: 'The return status, usually "OK"'
          type: string
        uptime:
          description: The amount of time in seconds that the server has been up for.
          type: number
        startTime:
          description: The UTC time that the server started up
          type: string
        versionNumber:
          description: Current version of the API
          type: string
        services:
          description: An list of the statuses of services that the API requires
          type: array
          items: {}
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
      headers:
        Content-Length:
          $ref: '#/components/parameters/Content-Length'
        Content-Type:
          $ref: '#/components/parameters/Content-Type'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
      headers:
        Content-Length:
          $ref: '#/components/parameters/Content-Length'
        Content-Type:
          $ref: '#/components/parameters/Content-Type'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
      headers:
        Content-Length:
          $ref: '#/components/parameters/Content-Length'
        Content-Type:
          $ref: '#/components/parameters/Content-Type'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
      headers:
        Content-Length:
          $ref: '#/components/parameters/Content-Length'
        Content-Type:
          $ref: '#/components/parameters/Content-Type'
    '405':
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
      headers:
        Content-Length:
          $ref: '#/components/parameters/Content-Length'
        Content-Type:
          $ref: '#/components/parameters/Content-Type'
    '406':
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
      headers:
        Content-Length:
          $ref: '#/components/parameters/Content-Length'
        Content-Type:
          $ref: '#/components/parameters/Content-Type'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
      headers:
        Content-Length:
          $ref: '#/components/parameters/Content-Length'
        Content-Type:
          $ref: '#/components/parameters/Content-Type'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInformationResponse'
      headers:
        Content-Length:
          $ref: '#/components/parameters/Content-Length'
        Content-Type:
          $ref: '#/components/parameters/Content-Type'
    ResponseHealth200:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status'
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      schema:
        type: string
      description: The `Accept` header field indicates the version of the API the client would like the server to use.
    Content-Length:
      name: Content-Length
      in: header
      required: false
      schema:
        type: integer
      description: |-
        The `Content-Length` header field indicates the anticipated size of the payload body. Only sent if there is a body.

        **Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
      required: true
      description: The `Content-Type` header indicates the specific version of the API used to send the payload body.
    Date:
      name: Date
      in: header
      schema:
        type: string
      required: true
      description: The `Date` header field indicates the date when the request was sent.
    X-Forwarded-For:
      name: X-Forwarded-For
      in: header
      schema:
        type: string
      required: false
      description: |-
        The `X-Forwarded-For` header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple `X-Forwarded-For` values should be expected and supported by implementers of the API.

        **Note:** An alternative to `X-Forwarded-For` is defined in [RFC 7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC 7239 is less-used and supported than `X-Forwarded-For`.
    FSPIOP-Source:
      name: FSPIOP-Source
      in: header
      schema:
        type: string
      required: true
      description: The `FSPIOP-Source` header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field `FSPIOP-Signature`).
    FSPIOP-Destination:
      name: FSPIOP-Destination
      in: header
      schema:
        type: string
      required: false
      description: 'The `FSPIOP-Destination` header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field must be set by the original sender of the request if the destination is known (valid for all services except GET /parties) so that any entities between the client and the server do not need to parse the payload for routing purposes. If the destination is not known (valid for service GET /parties), the field should be left empty.'
    FSPIOP-Encryption:
      name: FSPIOP-Encryption
      in: header
      schema:
        type: string
      required: false
      description: The `FSPIOP-Encryption` header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.
    FSPIOP-Signature:
      name: FSPIOP-Signature
      in: header
      schema:
        type: string
      required: false
      description: The `FSPIOP-Signature` header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.
    FSPIOP-URI:
      name: FSPIOP-URI
      in: header
      schema:
        type: string
      required: false
      description: 'The `FSPIOP-URI` header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information, see [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).'
    FSPIOP-HTTP-Method:
      name: FSPIOP-HTTP-Method
      in: header
      schema:
        type: string
      required: false
      description: 'The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information, see [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).'
    ID:
      name: ID
      in: path
      required: true
      schema:
        type: string
      description: The identifier value.
    Type:
      name: Type
      in: path
      required: true
      schema:
        type: string
      description: 'The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`.'
    SubId:
      name: SubId
      in: path
      required: true
      schema:
        type: string
      description: 'A sub-identifier of the party identifier, or a sub-type of the party identifier''s type. For example, `PASSPORT`, `DRIVING_LICENSE`.'
